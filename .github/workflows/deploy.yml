on:
  workflow_call:
    inputs:
      artifacts-key:
        required: true
        type: string
      version:
        required: true
        type: string
jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          scope: '@ngaox'
          cache: 'yarn'
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.artifacts-key }}
          path: dist
      - run: yarn install --frozen-lockfile

      - name: ðŸŽ‰ Publish packages to npmjs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd dist/packages
          for package in */; do
            cd $package
            yarn publish --new-version ${{ inputs.version }} --access public
            cd ..
          done

      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://npm.pkg.github.com'
      - name: ðŸŽ‰ Publish packages to GPR
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd dist/packages
          for package in */; do
            cd $package
            yarn publish --new-version ${{ inputs.version }} --access public
            cd ..
          done

      - name: ðŸŽ‰ Deploy docs & demos
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHAOSPAD_NGAOX }}'
          channelId: live
          projectId: chaospad-ngaox
