name: ðŸš€ Build & Release
on:
  push:
    branches:
      - v1
jobs:
  changelogs:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - uses: google-github-actions/release-please-action@v2
        id: release
        with:
          token: ${{ secrets.RELEASE_BOT_TOKEN }}
          command: manifest
          default-branch: v1

  release-publish:
    needs: changelogs
    if: ${{ needs.changelogs.outputs.release_created }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: Ngaox-SEO
            distPath: dist/seo
            buildScript: yarn build:seo
          - name: Ngaox-Chaospad
            distPath: dist/chaospad
            buildScript: yarn build:chaospad
          - name: Ngaox-Padup
            distPath: dist/padup
            buildScript: yarn build:padup
    steps:
      - uses: actions/checkout@v2
      - name: Install dependicies
        run: yarn install --frozen-lockfile
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.buildScript }}
      - name: ðŸŽ‰ Publishing @ngaox/${{ matrix.name }} to npm
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          package: ${{ matrix.distPath }}/package.json
      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
      - name: Zip package dist folder
        run: zip -r ${{ matrix.distPath }}.zip ${{ matrix.distPath }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.changelogs.outputs.upload_url }}
          asset_path: ${{ matrix.distPath }}.zip
          asset_name: ${{ matrix.name }}.zip
          asset_content_type: application/zip
      - run: |
          echo "Asset Uploaded!"
          echo "\tID: ${{ steps.upload-release-asset.outputs.id }}"
          echo "\tDownload-Url: ${{ steps.upload-release-asset.outputs.browser_download_url }}"

  git-tagging:
    needs: changelogs
    if: ${{ needs.changelogs.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Tag major and minor versions
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
